// <auto-generated />
using System;
using CvCrearing.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CvCrearing.Migrations
{
    [DbContext(typeof(CvDBContext))]
    partial class CvDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CvCrearing.Models.CandidateTab", b =>
                {
                    b.Property<int>("CandidateID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactNo");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("EmailAddress");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("CandidateID");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("CvCrearing.Models.Careerinformation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CandidateID");

                    b.Property<string>("CompamnyName");

                    b.Property<string>("CompanyBusiness");

                    b.Property<string>("Department");

                    b.Property<string>("Designation");

                    b.Property<DateTime?>("EndDate");

                    b.Property<DateTime?>("StartDate");

                    b.HasKey("ID");

                    b.HasIndex("CandidateID");

                    b.ToTable("Careerinformations");
                });

            modelBuilder.Entity("CvCrearing.Models.EducationalInformation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CandidateID");

                    b.Property<int?>("Duration");

                    b.Property<string>("ExamName");

                    b.Property<string>("InstuteName");

                    b.Property<string>("LavelOfEducation");

                    b.Property<string>("MajorSub");

                    b.Property<string>("Result");

                    b.Property<string>("YearOfPassing");

                    b.HasKey("ID");

                    b.HasIndex("CandidateID");

                    b.ToTable("EducationalInformation");
                });

            modelBuilder.Entity("CvCrearing.Models.PersonalInfoTab", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CandidateID");

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<string>("FatherName");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<string>("LastName");

                    b.Property<string>("MaritalStatus");

                    b.Property<string>("MotherName");

                    b.Property<string>("PermanentAddress");

                    b.Property<string>("PresentAddress");

                    b.HasKey("ID");

                    b.HasIndex("CandidateID");

                    b.ToTable("PersonalInfoTabs");
                });

            modelBuilder.Entity("CvCrearing.Models.ReferanceInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("CandidateID");

                    b.Property<string>("Designation");

                    b.Property<string>("Email");

                    b.Property<string>("Mobile");

                    b.Property<string>("Name");

                    b.Property<string>("Organization");

                    b.Property<string>("Relation");

                    b.HasKey("ID");

                    b.HasIndex("CandidateID");

                    b.ToTable("ReferanceInfos");
                });

            modelBuilder.Entity("CvCrearing.Models.TraningInformation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CandidateID");

                    b.Property<string>("Country");

                    b.Property<string>("Duration");

                    b.Property<string>("Institute");

                    b.Property<string>("Location");

                    b.Property<string>("Topicscoverd");

                    b.Property<string>("TraningTitle");

                    b.Property<string>("TraningYear");

                    b.HasKey("ID");

                    b.HasIndex("CandidateID");

                    b.ToTable("TraningInformation");
                });

            modelBuilder.Entity("CvCrearing.Models.Careerinformation", b =>
                {
                    b.HasOne("CvCrearing.Models.CandidateTab", "CandidateTab")
                        .WithMany("Careerinformations")
                        .HasForeignKey("CandidateID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CvCrearing.Models.EducationalInformation", b =>
                {
                    b.HasOne("CvCrearing.Models.CandidateTab", "CandidateTab")
                        .WithMany("EducationalInformations")
                        .HasForeignKey("CandidateID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CvCrearing.Models.PersonalInfoTab", b =>
                {
                    b.HasOne("CvCrearing.Models.CandidateTab", "CandidateTab")
                        .WithMany("PersonalInfoTabs")
                        .HasForeignKey("CandidateID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CvCrearing.Models.ReferanceInfo", b =>
                {
                    b.HasOne("CvCrearing.Models.CandidateTab", "CandidateTab")
                        .WithMany("ReferanceInfoes")
                        .HasForeignKey("CandidateID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CvCrearing.Models.TraningInformation", b =>
                {
                    b.HasOne("CvCrearing.Models.CandidateTab", "CandidateTab")
                        .WithMany("TraningInformations")
                        .HasForeignKey("CandidateID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
